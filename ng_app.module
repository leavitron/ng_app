<?php
/**
 * @file ng_app.module
 *
 * Implements the AngularJS-driven app root.
 */

function ng_app_init(){
  global $ng_app_path_to_lib;
  $ng_app_path_to_lib = variable_get('ng_app_path_to_lib','http://app_server.eu01.aws.af.cm');
  $module_settings = array(
    'path_to_lib' => $ng_app_path_to_lib,
    'restws_csrf_token' => drupal_get_token('restws'),
    'basePath' => url('', array('absolute' => TRUE))
  );
  drupal_add_js(array('ng_app' => $module_settings), 'setting');
}
function ng_app_preprocess_html(&$variables) {
  if(variable_get('ng_app_blocks_module')==true){
    $variables['attributes_array']['ng-app'] = 'ngApp';  // attach angular app
    $variables['attributes_array']['ng-controller'] = 'ngAppCtrl';  // attach app root controller
  }
}
function ng_app_page_build (&$page) { // FIXME:
//  $page['page_top']['ng_app_template'] = array(
//    '#weight' => -1000,
//    '#markup' => '<div id="ngAppView" ng-hide="isBusy" ng-view></div>'
//  );
}

function ng_app_register_module($module,$config_file) {
  global $ng_app_has_blocks;
  if($module=='ng_blocks'){
    $ng_app_has_blocks = true;
    // variable_set('ng_app_blocks_module',$module);
  }
  // angularjs_init_application('ngApp'); // fixme: remove dependency
  //global $ng_app_path_to_lib;
  // $lib = $ng_app_path_to_lib;
  $lib = variable_get('ng_app_path_to_lib','http://app_server.eu01.aws.af.cm');
  $path_to_app = $GLOBALS['base_root'].base_path().drupal_get_path('module', $module);
  $jsonp = true;
  if($module == "ng_blocks"){ $jsonp = false;}
  $ng_app_config_file = $GLOBALS['base_root'].base_path().drupal_get_path('module', $module).'/appsettings.json';
  if($jsonp == true){ $ng_app_config_file .= 'p';}
  $appsettings = ng_app_get_appsettings_json($config_file,$jsonp);
  $appsettings['path_to_lib'] = $lib;
  variable_set('ng_app_module',$module);
  variable_set('ng_app_appsettings',$appsettings);
  // js scripts
  $ng_app_modules = $appsettings['ng_app_modules'];
  $ng_app_standalone_insert = '';
  if(isset($appsettings['dependencies'])){
    foreach ($appsettings['dependencies'] as $d => $dependencie) {
      if(isset($appsettings['ng_app_blocks'])){
        drupal_add_js($lib . $dependencie);
      }
      $ng_app_standalone_insert .= '<script src="'.$lib . $dependencie.'"></script>';
    }
  }
  $ng_app_scripts = array(
    'js/controllers.js',
    'js/directives.js',
    'js/services.js'
  );
  // styleSheets
  if(isset($appsettings['styleSheets'])){
    foreach ($appsettings['styleSheets'] as $s => $css) {
      drupal_add_css($lib.$css, array('group' => CSS_THEME, 'type' => 'external'));
      $ng_app_standalone_insert .= '<link rel="stylesheet" href='.$lib.$css.'"/>';
    }
  }
  foreach ($ng_app_scripts as $i => $script) {
    if(isset($appsettings['ng_app_blocks'])){
      drupal_add_js($path_to_app.'/'.$script);
    }
    $ng_app_standalone_insert .= '<script src="'.$script.'"></script>';
  }
  if(isset($appsettings['ng_app_blocks'])){
    $ng_app_blocks = $appsettings['ng_app_blocks'];
    foreach ($ng_app_blocks as $index => $widget) {
      $keys = array_keys($widget);
      array_push($ng_app_modules, "ngApp.".$keys[0]);
      array_push($ng_app_scripts, '/'. $keys[0] .'/'. $keys[0] .'.js');
      // $ng_app_standalone_insert .= '<script src="'.$path_to_app.'/'. $keys[0] .'/'. $keys[0] .'.js"></script>';
    }
  }
  $templateUrl = $appsettings['path_to_templates'].'/'.$appsettings['template'];
  if (strpos($templateUrl,'.html') == false) {
    $templateUrl = '';
  }

  // standalone: app.js
  $script = '
            /*
            * DO NOT ALTER THIS SCRIPT: dynamically generated Drupal / Angular app
            */
            var ng_app_modules = '.drupal_json_encode($ng_app_modules).';
            var ng_app_domain= "'.$GLOBALS['_SERVER']['HTTP_HOST'].rtrim(base_path(), "/").'";
            var ng_app_config_file = "'.$ng_app_config_file.'";
            window.Drupal = window.Drupal || {};
            window.Drupal.settings = window.Drupal.settings || {};
            window.Drupal.settings.baseUrl = "http://"+ng_app_domain+"/";

            var app = angular.module("ngApp",ng_app_modules)
                .controller("ngAppCtrl", function($scope,$http,$route,AppService,AppSettings,DrupalService,Node) {
                    app._rootScope = $scope;
                    $scope.isBusy = true;
                    var lastRoute = $route.current;
                    $scope.$on("$routeChangeSuccess",function(event){
                            AppSettings.currentRoute = $route.current
                            $scope.$broadcast("routeChange",$route.current)
                        }
                    );
                })
                .config(["$routeProvider",function ($routeProvider) {
                    $routeProvider
                      .when("/", {
                            templateUrl: "'.$templateUrl.'",
                            controller: "MainCtrl",
                            resolve: bootResolve.app,
                      })
                      .when("/node/:nid",{
                            redirectTo: "/",
                            action: "node.render",
                      })
                      .otherwise({
                         redirectTo: "/"
                      });
                }]);

             var bootResolve = {
                      app: ["$q","AppService","AppSettings","DrupalService","require",function ($q,AppService,AppSettings,DrupalService,require) {
                          var defer = $q.defer();
                          var scope = app._rootScope
                          if(AppService.ready){
                              defer.resolve();
                          }else{
                              AppSettings.domain = ng_app_domain;
                              AppSettings.baseUrl = "http://"+ng_app_domain+"/";
                              AppService.initialize({
                                  config_file: ng_app_config_file ,
                                  scope: scope,
                                  callback:function(){
                                      DrupalService.initialize({domain:AppSettings.domain,callback:function(){
                                          // drupal ng_blocks models
                                          if(AppSettings.ng_app_blocks){
                                            var ng_app_blocks = AppSettings.ng_app_blocks;
                                            for(var k in ng_app_blocks){
                                              for(var kk in ng_app_blocks[k]){
                                                 window.Drupal.settings[kk]={}
                                                 window.Drupal.settings[kk].model=ng_app_blocks[k][kk]
                                              }
                                            }
                                          }
                                          scope.isBusy = false;
                                          defer.resolve();
                                          scope.$broadcast("init",scope);
                                        }
                                      })
                                  }
                              });
                          }
                          return defer.promise;
                      }]
                  }
  ';
  if(isset($appsettings['ng_app_blocks'])){
    $handle = fopen(drupal_get_path('module', 'ng_app') . '/js/app.js', 'w+');
    if($handle){
      if(!fwrite($handle, $script))
        die("couldn't write to file.");
    }
    drupal_add_js(drupal_get_path('module', 'ng_app') . '/js/app.js');
  }

  // standalone: index.html
  $html = '<!DOCTYPE html>
          <!--
          *
          * DO NOT ALTER THIS FILE: dynamically generated Drupal / Angular app
          *
          -->
          <html>
          <head>
              <meta charset="utf-8">
              <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
              <title>'.$module.'</title>
              <meta name="description" content="">
              <meta name="viewport" content="width=device-width">
              <link rel="stylesheet" href="http://app_server.eu01.aws.af.cm/css/vendor/bootstrap.min.css"/>
          </head>
          <body ng-app="ngApp" ng-controller="ngAppCtrl">
             <div id="main" class="container" ng-hide="isBusy" ng-view=""></div>
             '.$ng_app_standalone_insert.'
             <script>
                '.$script.'
             </script>
          </body>
          </html>';
  if(!isset($appsettings['ng_app_blocks'])){
    $handle = fopen(drupal_get_path('module', $module) . '/index.html', 'w+');
    if($handle){
      if(!fwrite($handle, $html))
        die("couldn't write to file.");
    }
  }
}

function ng_app_preprocess_node(&$variables) {
  $node = $variables['node'];
  $variables['attributes_array']['data-nid'] = $node->nid;
  $variables['attributes_array']['data-type'] = $node->type;
  //$variables['classes_array'][] = 'angular-node';
}

/**
 * Implements hook_block_view().
 */
function ng_app_block_view($delta = '') {
  $block = array();
  $appsettings = variable_get('ng_app_appsettings');
  if(!isset($appsettings['ng_app_blocks'])){return block;}
  $ng_app_blocks = $appsettings['ng_app_blocks'];
  foreach ($ng_app_blocks as $a => $widget) {
    if (isset($widget[$delta])){
      $settings = $widget[$delta];
      $settings['id'] = $delta;
      drupal_add_js(array($delta => array(
        'model' => $settings
      )),'setting');
      $block['subject'] = t($settings['title']);
      $block['content'] = array(
        '#theme' => $delta,
        '#attached' => array(
          'js' => array(),
        ),
      );
    }
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function ng_app_theme() {
  global $ng_app_has_blocks;
  $array = array();
  if($ng_app_has_blocks!=true){return $array;}
  $appsettings = variable_get('ng_app_appsettings');
  if(!isset($appsettings['ng_app_blocks'])){return $array;}
  $ng_app_blocks = $appsettings['ng_app_blocks'];
  foreach ($ng_app_blocks as $key => $widget) {
    $keys = array_keys($widget);
    $id = $keys[0];
    $path = drupal_get_path('module',variable_get('ng_app_module')) . '/' . $id;
    drupal_add_js(drupal_get_path('module', variable_get('ng_app_module')).'/'.$id.'/'.$id.'.js');
    $array[$id] = array(
      'template' => '/'.$id,
      'variables' => $widget[$id],
      'path' => $path
    );
  }
  return $array;
}

/**
 * Implements hook_block_info().
 */
function ng_app_block_info() {
  $blocks = array();
  $appsettings = variable_get('ng_app_appsettings');
  if(!isset($appsettings['ng_app_blocks'])){return $blocks;}
  $ng_app_blocks = $appsettings['ng_app_blocks'];
  foreach ($ng_app_blocks as $key => $widget) {
    $keys = array_keys($widget);
    $id = $keys[0];
    $blocks[$id] = array(
      'info' => t('Angular: '.$widget[$id]['title'])
    );
  }
  return $blocks;
}

/**
 * Implements hook_admin()
 */
function ng_app_admin() {
  global $ng_app_path_to_lib;
  $form = array();
  $form['ng_app_path_to_lib'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to libraries.'),
    '#default_value' => variable_get('ng_app_path_to_lib', $ng_app_path_to_lib),
    '#size' => 255,
    '#maxlength' => 255,
    '#description' => t("Path to the ng_app library."),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}

/**
 * Implements hook_menu()
 */
function ng_app_menu() {
  $items['admin/config/development/ng_app'] = array(
    'title' => t('NgApp'),
    'description' => t('Ng App module settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ng_app_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Alter the theme hook suggestions used by the fences module.
 *
 * @param $fences
 *   An array containing the data returned by hook_fences_suggestion_info().
 */
function ng_app_fences_suggestion_info_alter(&$fences) {
//   $fences['field']['div'] =  array(
//     'label' => t('div'),
//     'element' => 'div', // If multiple elements are  used they should be seperated by spaces, e.g. 'pre code'.
//     'description' => t('<div> - attaches the angular fieldController'),
//     'groups' => array(t('Angular directives')),
//  );
//  $fences['field']['swipe'] =  array(
//    'label' => t('swipe'),
//    'element' => 'swipe', // If multiple elements are  used they should be seperated by spaces, e.g. 'pre code'.
//    'description' => t('<swipe> - wrap fields in a swipable element (use only for multiple fields)'),
//    'groups' => array(t('Angular directives')),
//  );
//  $fences['field']['accordion'] =  array(
//    'label' => t('accordion'),
//    'element' => 'accordion', // If multiple elements are  used they should be seperated by spaces, e.g. 'pre code'.
//    'description' => t('<accordion> - wrap fields in a accordion element (use only for multiple fields)'),
//    'groups' => array(t('Angular directives')),
//  );
  return $fences;
}


function ng_app_get_appsettings_json($url,$jsonp = false){
  $file = $url;
  $string = file_get_contents($file);
  $object = json_decode($string,true);
  $settingsTemp = array();
  if (isset($object['appsettings']['add'])){ // legacy flex
    foreach ($object['appsettings']['add'] as $add => $add_a) {
      $settingsTemp[$add_a['key']] = $add_a['value'];
    }
  }else{
    $settingsTemp = json_decode($string,true);
  }
  // save jsonp version
  if($jsonp == true){
    $jsonp = "JsonWrapping(". $string .");";
    $handle = fopen($url.'p', 'w+');
    if($handle){
      if(!fwrite($handle, $jsonp))
        die("couldn't write to file.");
    }
  }
  return $settingsTemp;
}
