<?php
/**
 * @file ng_app.module
 *
 * Implements a AngularJS-driven blocks + apps .
 */

function ng_app_init(){
  global $ng_app_path_to_lib;
  $ng_app_path_to_lib = variable_get('ng_app_path_to_lib','http://app_server.eu01.aws.af.cm');
  $module_settings = array(
    'path_to_lib' => $ng_app_path_to_lib,
    'basePath' => url('',array('absolute' => TRUE)),
    'editables' => 'eval({})'
  );
  drupal_add_js(array('ng_app' => $module_settings), 'setting');
}
function ng_app_preprocess_html(&$variables) {
  global $ng_app_path_to_app_module;
  if(module_exists(variable_get('ng_app_module')) && !path_is_admin(current_path())){
    $ng_app_path_to_app_module = drupal_get_path('module',variable_get('ng_app_module'));
    //$variables['attributes_array']['ng-app'] = 'ngApp';  // attach angular app
    $variables['attributes_array']['ng-controller'] = 'ngAppCtrl';  // attach app root controller
    ng_app_render_script();
  }else{
    variable_set('ng_app_blocks_module','');
    variable_get('ng_app_appsettings','');
  }
}
function ng_app_page_build (&$page) {
  // alter html markup here
  if(isset($page['content']['system_main']['main'])){
    $main_markup = $page['content']['system_main']['main']['#markup'];
    if($_GET['q']=='sections') {
//    $main_markup = str_replace('field field-name-field-product-drums-consumed', 'well field field-name-field-product-drums-consumed', $main_markup);
//    //$main_markup = str_replace('field field-name-field-product-surface-consumed', 'well field field-name-field-product-surface-consumed', $main_markup);
//    $main_markup = str_replace('views-field-field-product-surface-consumed', 'well views-field-field-product-surface-consumed', $main_markup);
    }
    $page['content']['system_main']['main']= array(
      '#markup' => $main_markup
    );
  }
  $page['page_top']['ng_app_template'] = array(
    '#weight' => -1000,
    //'#markup' => '<div ng-controller="MainCtrl"><div id="main" ng-hide="isBusy" ng-view></div></div>'
    '#markup' => '<div id="main" ng-controller="MainDrupalCtrl" ng-view></div>'
  );
}

function ng_app_register_module($module,$config_file) {
  global $ng_app_angular_modules_drupal;
  global $ng_app_angular_modules_app;
  global $ng_app_module_script;
  global $ng_app_path_to_app_module;
  global $ng_app_templateUrl;
  global $ng_app_config_file;
  global $ng_app_path_to_lib;
  global $ng_app_standalone_insert;
  $lib = variable_get('ng_app_path_to_lib',$ng_app_path_to_lib);
  $appsettings = ng_app_get_appsettings_json($config_file,false);
  $appsettings['path_to_lib'] = $lib;
  variable_set('ng_app_module',$module);
  variable_set('ng_app_appsettings',$appsettings);
  $ng_app_path_to_app_module = drupal_get_path('module', $module);
  $ng_app_path_to_app = $GLOBALS['base_root'].base_path().$ng_app_path_to_app_module;
  $ng_app_config_file = $GLOBALS['base_root'].base_path().drupal_get_path('module', $module).'/appsettings.json';
  $ng_app_angular_modules_drupal = $appsettings['ng_app_modules'];
  $ng_app_angular_modules_app = $ng_app_angular_modules_drupal;
  $ng_app_standalone_insert = '';

  // css
  if(isset($appsettings['stylesheets_app_server'])){
    foreach ($appsettings['stylesheets_app_server'] as $s => $css) {
      drupal_add_css($lib.'/' .$css, array('group' => CSS_THEME, 'type' => 'external'));
      $ng_app_standalone_insert .= '<link rel="stylesheet" href="'.$lib.'/'.$css.'"/>';
    }
  }
  if(isset($appsettings['stylesheets'])){
    foreach ($appsettings['stylesheets'] as $s => $css) {
      drupal_add_css(drupal_get_path('module', $module).'/'.$css, array('group' => CSS_THEME, 'type' => 'external'));
      $ng_app_standalone_insert .= '<link rel="stylesheet" href="'.$css.'"/>';
    }
  }
  // js
  if(isset($appsettings['dependencies_app_server'])){
    foreach ($appsettings['dependencies_app_server'] as $d => $dependencie) {
      if(isset($appsettings['ng_app_blocks'])){
        drupal_add_js($lib . '/' . $dependencie);
      }
      $ng_app_standalone_insert .= '<script src="'.$lib . '/' .$dependencie.'"></script>';
    }
  }
  if(isset($appsettings['dependencies'])){
    foreach ($appsettings['dependencies'] as $d => $dependencie) {
      drupal_add_js(drupal_get_path('module', $module).'/'.$dependencie);
      $ng_app_standalone_insert .= '<script src="'.$dependencie.'"></script>';
    }
  }

  $ng_app_module_scripts = array();
  if ($handle = opendir(drupal_get_path('module', $module) . '/common' )) {
    while (false !== ($entry = readdir($handle))) {
      if ($entry != "." && $entry != "..") {
        array_push($ng_app_module_scripts, 'common/'.$entry);
      }
    }
    closedir($handle);
  }
  foreach ($ng_app_module_scripts as $script) {
    if(isset($appsettings['ng_app_blocks'])){
      drupal_add_js(drupal_get_path('module', $module) . '/' . $script);
    }
    $ng_app_standalone_insert .= '<script src="'.$script.'"></script>';
  }

  //  define standalone app scripts + angular modules
  if(isset($appsettings['ng_app_blocks'])){
    $ng_app_blocks = $appsettings['ng_app_blocks'];
    foreach ($ng_app_blocks as $index => $block) {
      $keys = array_keys($block);
      array_push($ng_app_module_scripts, '/app/'. $keys[0] .'/'. $keys[0] .'.js');
      $ng_app_standalone_insert .= '<script src="'.$ng_app_path_to_app.'/app/'. $keys[0] .'/'. $keys[0] .'.js"></script>';
      array_push($ng_app_angular_modules_app,$keys[0]);
    }
  }
  $ng_app_templateUrl = $appsettings['path_to_templates'].'/'.$appsettings['template'];
  if (strpos($ng_app_templateUrl,'.html') == false) {
    $ng_app_templateUrl = '';
  }
}

/**
 * Implements hook_block_view().
 */
function ng_app_block_view($delta = '') {
  global $ng_app_angular_modules_drupal;
  $block = array();
  $appsettings = variable_get('ng_app_appsettings');
  if(!isset($appsettings['ng_app_blocks'])){return $block;}
  $ng_app_blocks = $appsettings['ng_app_blocks'];
  foreach ($ng_app_blocks as $a => $widget) {
    if (isset($widget[$delta])){
      array_push($ng_app_angular_modules_drupal,$delta);
      $settings = $widget[$delta];
      $settings['id'] = $delta;
      drupal_add_js(array($delta => array(
        'model' => $settings
      )),'setting');
      $block['subject'] = t($settings['title']);
      $block['content'] = array(
        '#theme' => $delta,
        '#attached' => array(
          //'js' => array(drupal_get_path('module', variable_get('ng_app_module')).'/app/'.$delta.'/'.$delta.'.js'),
          'css' => array(),
        ),
      );
    }
  }
  return $block;
}

// write angular js + html files
function ng_app_render_script(){
  global $ng_app_path_to_lib;
  global $ng_app_angular_modules_drupal;
  global $ng_app_angular_modules_app;
  global $ng_app_path_to_app_module;
  global $ng_app_config_file;
  global $ng_app_standalone_insert;
  global $ng_app_templateUrl;
  global $ng_app_module_script;
  global $ng_app_app_script;
  $appsettings = variable_get('ng_app_appsettings');
  /*
  // ng_app: module js
  */
  $ng_app_module_script = '
  (function(){
          /*
          *  Angular bootstrap.
          */
          var ng_app_modules = '.drupal_json_encode($ng_app_angular_modules_drupal).';
          var ng_app_domain= "'.$GLOBALS['_SERVER']['HTTP_HOST'].rtrim(base_path(), "/").'";
          var ng_app_config_file = "'.$ng_app_config_file.'";
          window.Drupal = window.Drupal || {};
          window.Drupal.ng_app = window.Drupal.ng_app || {};
          window.Drupal.ng_app.editables = window.Drupal.ng_app.editables || {};

          angular.element(document).ready(function() {
              angular.bootstrap(document, ["ngApp"]);
          });
          angular.module("ngApp",ng_app_modules)
              .controller("ngAppCtrl", function($scope,$rootScope,$http,$route,AppService,AppSettings,DrupalService,BlockService) {
                  $rootScope.ng_app_domain = ng_app_domain;
                  $rootScope.ng_app_config_file = ng_app_config_file;
                  $rootScope.editables = window.Drupal.ng_app.editables;
                  $scope.$on("$routeChangeSuccess",function(event){
                          AppSettings.currentRoute = $route.current
                          $scope.$broadcast("routeChange",$route.current)
                      }
                  );
                  BlockService.init($scope).then(function(){
                    $scope.$broadcast("init")
                  });
              })
   })();
  ';
  $handle = fopen(drupal_get_path('module', variable_get('ng_app_module')) . '/app/app.js', 'w+');
  if($handle){
    if(!fwrite($handle, $ng_app_module_script))
      die("couldn't write to file.");
  }
  drupal_add_js($ng_app_module_script,'inline');
  //drupal_add_js(drupal_get_path('module', variable_get('ng_app_module')) . '/app/app.js');

  /*
  // ng_app: standalone js
  */
  $standalone_template = 'templates/main-app.tpl.html';
  $ng_app_blocks = $appsettings['ng_app_blocks'];
  $routes = '';
  foreach ($ng_app_blocks as $key => $block) {
    $keys = array_keys($block);
    $id = $keys[0];
    $routes .= '.when("/block/'.$id.'",{
                                templateUrl: "app/'.$id.'/'.$id.'.tpl.html",
                                controller: "'.$id.'Ctrl",
                                // resolve: ModuleService.init()
                          })';
  }
  $script = '.config(["$routeProvider",function ($routeProvider) {
                        $routeProvider
                          .when("/", {
                                templateUrl: "'.$ng_app_templateUrl.'",
                                controller: "MainCtrl",
                                // resolve: bootResolve.app,
                          })
                          '.$routes.'
                          // todo:
    //                      .when("/block/:delta",{
    //                            templateUrl: "app/:delta/:delta.tpl.html",
    //                            controller: ":deltaCtrl",
    //                            resolve: bootResolve.app,
    //                      })
//                          .otherwise({
//                             redirectTo: "/"
//                          });
                    }]
                 );
         })();';
  $ng_app_app_script = str_replace('})();', $script, $ng_app_module_script);
  $ng_app_app_script = str_replace($ng_app_templateUrl, $standalone_template, $ng_app_app_script);
  $ng_app_app_script = str_replace(drupal_json_encode($ng_app_angular_modules_drupal), drupal_json_encode($ng_app_angular_modules_app), $ng_app_app_script);

  // write standalone phonegap app html
  if($appsettings['standalone'] == "true"){
    $ng_app_path_to_lib = 'bower_components/app_server_phonegap';
    $ng_app_app_script = str_replace($ng_app_config_file, 'appsettings.json', $ng_app_app_script);
    $ng_app_app_script = str_replace($GLOBALS['base_root'].base_path().$ng_app_path_to_app_module, '', $ng_app_app_script);
    $ng_app_standalone_insert = str_replace($GLOBALS['base_root'].base_path().$ng_app_path_to_app_module.'/', '', $ng_app_standalone_insert);
  }
  include $ng_app_path_to_app_module.'/index.inc';
  $handle = fopen($ng_app_path_to_app_module . '/index.html', 'w+');
  if($handle){
    if(!fwrite($handle, $html))
      die("couldn't write to file.");
  }
}

/**
 * Implements hook_theme().
 */
function ng_app_theme() {
  $array = array();
  $appsettings = variable_get('ng_app_appsettings');
  if(!isset($appsettings['ng_app_blocks'])){return $array;}
  if(count($appsettings['ng_app_blocks']) == 0) {
    return $array;
  };
  $ng_app_blocks = $appsettings['ng_app_blocks'];
  foreach ($ng_app_blocks as $key => $block) {
    $keys = array_keys($block);
    $id = $keys[0];
    $path = drupal_get_path('module',variable_get('ng_app_module'));
    $array[$id] = array(
      'template' => '/'.variable_get('ng_app_module'),
      'variables' => $block[$id],
      'path' => $path
    );
  }
  return $array;
}

/**
 * Implements hook_block_info().
 */
function ng_app_block_info() {
  $blocks = array();
  $appsettings = variable_get('ng_app_appsettings');
  if(!isset($appsettings['ng_app_blocks']) || count($appsettings['ng_app_blocks']) == 0 ){ return $blocks; }
  $ng_app_blocks = $appsettings['ng_app_blocks'];
  foreach ($ng_app_blocks as $key => $block) {
    $keys = array_keys($block);
    $id = $keys[0];
    $blocks[$id] = array(
      'info' => t($block[$id]['title'])
    );
  }
  return $blocks;
}

/**
 * Implements hook_admin()
 */
function ng_app_admin() {
  global $ng_app_path_to_lib;
  $form = array();
  $form['ng_app_path_to_lib'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to libraries.'),
    '#default_value' => variable_get('ng_app_path_to_lib', $ng_app_path_to_lib),
    '#size' => 255,
    '#maxlength' => 255,
    '#description' => t("Path to the ng_app library."),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}

/**
 * Implements hook_menu()
 */
function ng_app_menu() {
  $items['admin/config/development/ng_app'] = array(
    'title' => t('NgApp'),
    'description' => t('Ng App module settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ng_app_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_preprocess_node()
 *
 */
function ng_app_preprocess_node(&$variables) {
  $node = $variables['node'];
  $variables['attributes_array']['data-nid'] = $node->nid;
  $variables['attributes_array']['data-type'] = $node->type;
  //$variables['classes_array'][] = 'angular-node';
}

/**
 * Alter the theme hook suggestions used by the fences module.
 *
 * @param $fences
 *   An array containing the data returned by hook_fences_suggestion_info().
 */
function ng_app_fences_suggestion_info_alter(&$fences) {
//   $fences['field']['div'] =  array(
//     'label' => t('div'),
//     'element' => 'div', // If multiple elements are  used they should be seperated by spaces, e.g. 'pre code'.
//     'description' => t('<div> - attaches the angular fieldController'),
//     'groups' => array(t('Angular directives')),
//  );
//  $fences['field']['swipe'] =  array(
//    'label' => t('swipe'),
//    'element' => 'swipe', // If multiple elements are  used they should be seperated by spaces, e.g. 'pre code'.
//    'description' => t('<swipe> - wrap fields in a swipable element (use only for multiple fields)'),
//    'groups' => array(t('Angular directives')),
//  );
//  $fences['field']['accordion'] =  array(
//    'label' => t('accordion'),
//    'element' => 'accordion', // If multiple elements are  used they should be seperated by spaces, e.g. 'pre code'.
//    'description' => t('<accordion> - wrap fields in a accordion element (use only for multiple fields)'),
//    'groups' => array(t('Angular directives')),
//  );
  return $fences;
}

function ng_app_get_appsettings_json($url,$jsonp = false){
  $file = $url;
  $string = file_get_contents($file);
  $object = json_decode($string,true);
  $settingsTemp = array();
  if (isset($object['appsettings']['add'])){ // legacy flex
    foreach ($object['appsettings']['add'] as $add => $add_a) {
      $settingsTemp[$add_a['key']] = $add_a['value'];
    }
  }else{
    $settingsTemp = json_decode($string,true);
  }
  // save jsonp version
  if($jsonp == true){
    $jsonp = "JsonWrapping(". $string .");";
    $handle = fopen($url.'p', 'w+');
    if($handle){
      if(!fwrite($handle, $jsonp))
        die("couldn't write to file.");
    }
  }
  return $settingsTemp;
}
